{"0": {
    "doc": "Agent rules",
    "title": "Overview",
    "content": "There are two Panther event receivers: . | Syslog | HTTP | . Events flow through each agent before being processed by the global and group rules. ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent#overview",
    "relUrl": "/panther/rules/agent#overview"
  },"1": {
    "doc": "Agent rules",
    "title": "Agent Rules",
    "content": "These are common to all agents . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent#agent-rules",
    "relUrl": "/panther/rules/agent#agent-rules"
  },"2": {
    "doc": "Agent rules",
    "title": "Default Event Identifier",
    "content": ". The event’s identifier field uniquely identifies an event in the console. By default this is created by combining the node, severity, tag and summary fields: . {node}:{severity}:{tag}:{summary} . Any events with a matching identifier will be grouped together, and the corresponding event tally will increase by 1. If no matching event identifier is found, then a new event is created. Timestamps are also stored for each event. Please note that when events are deduplicated via the identifier field, some information may be lost. For example, the PID of a process can change regularly, but is not included in the identifier by default, so multiple PIDs may aggregate into a single event. ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent#default-event-identifier",
    "relUrl": "/panther/rules/agent#default-event-identifier"
  },"3": {
    "doc": "Agent rules",
    "title": "Field Mapping",
    "content": ". ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent#field-mapping",
    "relUrl": "/panther/rules/agent#field-mapping"
  },"4": {
    "doc": "Agent rules",
    "title": "Field Transformers",
    "content": ". The transforms allow pre-defined functions to be applied to event console fields before rules processing takes place. Currently supported transformations are . | Transformation | Description | . | Lower Case | lowercases a field value | . | Upper Case | uppercases a field value | . | Left Trim | Trims whitespace on the left | . | Right Trim | Trims whitespace on the right | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent#field-transformers",
    "relUrl": "/panther/rules/agent#field-transformers"
  },"5": {
    "doc": "Agent rules",
    "title": "Agent Specific - Syslog",
    "content": "Syslog message fields need to be mapped to event console fields. These fields will then be available for matching in rules processing. Currently supported fields are as follows: . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent#agent-specific---syslog",
    "relUrl": "/panther/rules/agent#agent-specific---syslog"
  },"6": {
    "doc": "Agent rules",
    "title": "Common to all Syslog messages",
    "content": "| Field | Example | . | prival | &lt;PRIVAL&gt; | . | facilityID |   | . | severityID |   | . | facility | local2 | . | severity | warn | . | type | RFC5424, RFC3164 | . | time | 2022-07-04T16:24:41.786Z | . | host | localhost | . | appName | sshd | . | message | User authentication | . | msgid | &lt;MSGID&gt; | . | pid | &lt;PROCID&gt; | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent#common-to-all-syslog-messages",
    "relUrl": "/panther/rules/agent#common-to-all-syslog-messages"
  },"7": {
    "doc": "Agent rules",
    "title": "Additional fields for RFC5424",
    "content": "Note structuredData.timeQuality.* fields are optional, but commonly used. Please refer to you Syslog generators documentation. | Field | Example | . | structuredData.timeQuality.tzKnown | 1 | . | structuredData.timeQuality.isSynced | 1 | . | structuredData.timeQuality.syncAccuracy | 531000 | . | structuredData.&lt;SD-ID&gt;.&lt;PARAM-NAME&gt; | &lt;PARAM-VALUE&gt; | . Example of sending an RFC5424 message . Note Older implementations of logger may lack the --rfc5424 flag, such as CentOS 7. logger -p local2.warn -n localhost -T -P 1514 --rfc5424 -t sshd --msgid 1234 --id=44 --sd-id test@123 --sd-param foo=\\\"bar\\\" --sd-id more@456 --sd-param fiz=\\\"baz\\\" hello world . Would make the following fields and values accessible with the Syslog rules: . | Field | Value | . | prival | 148 | . | facilityID | 18 | . | severityID | 4 | . | facility | local2 | . | severity | warn | . | type | RFC5424 | . | time | 2022-07-04T16:24:41.786Z | . | host | localhost | . | appName | sshd | . | message | hello world | . | msgid | 1234 | . | pid | 44 | . | structuredData.timeQuality.tzKnown | 1 | . | structuredData.timeQuality.isSynced | 1 | . | structuredData.timeQuality.syncAccuracy | 531000 | . | structuredData.test@123.foo | bar | . | structuredData.more@456.fiz | baz | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent#additional-fields-for-rfc5424",
    "relUrl": "/panther/rules/agent#additional-fields-for-rfc5424"
  },"8": {
    "doc": "Agent rules",
    "title": "Differentiating between RFC3164 and RFC5424 messages",
    "content": "In order to selectively handle the two message formats, you can use an additional selector, such as: . - name: This is a Syslog RFC3164 message eq: input.type: RFC3164 set: summary: 'This message was formatted as RFC3164' agent: 'Syslog {input.type}' - name: This is a Syslog RFC5424 message eq: input.type: RFC5424 set: summary: 'This message was formatted as RFC5424' agent: 'Syslog {input.type}' external_id: '{input.msgID}' . For RFC5424 formatted messages it may also be useful to select based on the availability of structuredData elements, with the following: . - name: This is a Syslog RFC5424 message with structuredData eq: input.type: RFC5424 field_exists: - structuredData.test@123.foo set: summary: 'This message was formatted as RFC5424 and has structuredData test@123 is {structuredData.test@123.foo}' agent: 'Syslog {input.type}' . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent#differentiating-between-rfc3164-and-rfc5424-messages",
    "relUrl": "/panther/rules/agent#differentiating-between-rfc3164-and-rfc5424-messages"
  },"9": {
    "doc": "Agent rules",
    "title": "Severity Mapping",
    "content": ". Syslog logging levels need to be mapped to event console severities as there is not a one to one relationship between them, and the scale is also inverted. Syslog levels are defined from 7 (debug) to 0 (emergency). Panther severities are from 5 (critical) to 0 (clear). By default, events with severity 0 will be periodically removed from the list of event logs in the console. ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent#severity-mapping",
    "relUrl": "/panther/rules/agent#severity-mapping"
  },"10": {
    "doc": "Agent rules",
    "title": "Agent Specific - HTTP",
    "content": "Sending events via the HTTP API requires sending a JSON payload that minimally conforms to the following structure . Note severity is an integer from 0 to 5 . { \"event: { \"node\": \"hostname\", \"tag\": \"some string\", \"summary\": \"what the event pertains too\", \"severity\": 3 } } . In addition to the above, extra fields can be included within the event: {} object. Note They must be of String types. Given the following JSON payload: . { \"event\" { \"node\": \"hostname\", \"tag\": \"some string\", \"summary\": \"what the event pertains too\", \"severity\": 3, \"extra1\": \"An additional extra field\", \"extra2\": \"Agent Smith\", } } . These additional fields can be referenced within the agent http.rules.yml, such as: . agent: rules: - name: appends extra1 to the summary field_exists: - \"extra1\" set: summary: '{summary} + {extra1}' agent: '{extra2}' . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent#agent-specific---http",
    "relUrl": "/panther/rules/agent#agent-specific---http"
  },"11": {
    "doc": "Agent rules",
    "title": "Agent rules",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/agent",
    "relUrl": "/panther/rules/agent"
  },"12": {
    "doc": "AWS Events",
    "title": "AWS-Events2Panther",
    "content": "This guide will quickly and easily allow a user to deploy an AWS Lambda function called AWS-Events2Panther to collect AWS events and send them to Panther using the Panther REST API, which is a general purpose API that can also be used from the command-line. AWS events are either region specific or global, depending on the service. Therefore, to get all events to your Panther Console you will have to deploy the AWS-Events2Panther Lambda function to each of your accounts and regions that you wish to monitor. The AWS-Events2Panther Lambda function Node.js JavaScript code can be easily modified to support different AWS events, and/or send different data as part of the message, if required ( Pull Requests welcome ). Events can be sent to either an app.panther.support SaaS instance or your own self-hosted Dockerised container deployment. NOTE: If you are self-hosting Panther through a local docker installation, you will need to ensure there is network connectivity from AWS to Panther. It is assumed there will be a TLS reverse proxy sat in front of Panther, if this not the case the Lambda function will need to be modified . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#aws-events2panther",
    "relUrl": "/panther/sending-events/aws#aws-events2panther"
  },"13": {
    "doc": "AWS Events",
    "title": "System Design",
    "content": "This system has been designed to gather AWS events, extract data from them and send it to your Panther Console via the Panther API. The general flow of events from AWS to Panther is summarised by the following: . | The Lambda function is triggered whenever a filter matches an event. | The Lambda function formats the event data into a Panther JSON message. | The Lambda function sends the message to your Panther Console via the Panther API (over HTTPS) using your private API key. | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#system-design",
    "relUrl": "/panther/sending-events/aws#system-design"
  },"14": {
    "doc": "AWS Events",
    "title": "Step-by-step",
    "content": "The panther-aws-events project is built and deployed to AWS using the Serverless Application Model (SAM): . docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html . Therefore, to easily build and deploy the Lambda function code to AWS, you must first install SAM. NOTE: The AWS SAM tool requires that you have first setup the AWS CLI tools, and that you can use them to access your account. Amazon/AWS setup instructions will guide you through this process docs.aws.amazon.com/cli/index.html . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#step-by-step",
    "relUrl": "/panther/sending-events/aws#step-by-step"
  },"15": {
    "doc": "AWS Events",
    "title": "Installing SAM on Linux",
    "content": "To install SAM on Linux, you can use the Python 3 installer version: . pip3 install aws-sam-cli . The official Amazon SAM install guide covers Windows, macOS and Linux and is slightly more involved. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#installing-sam-on-linux",
    "relUrl": "/panther/sending-events/aws#installing-sam-on-linux"
  },"16": {
    "doc": "AWS Events",
    "title": "Checklist",
    "content": "In order to send events from your AWS estate to Panther you will need to have the following values: . | APIToken | Panther [HTTP API Key](/panther-docs/panther/admin#api-keys) this will be a long 32 character string of random letters and numbers | . | APIUrl | Panther [Event API URL](/panther-docs/panther/api) e.g. [https://example.app.panther.support/api/event/create](https://app.panther.support){:target=\"_blank\"} or self-hosted API endpoint | . You will be prompted for these values when deploying to AWS via SAM. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#checklist",
    "relUrl": "/panther/sending-events/aws#checklist"
  },"17": {
    "doc": "AWS Events",
    "title": "Installing AWS-Events2Panther",
    "content": "Download the panther-aws-events source code from GitHub with: . git clone https://github.com/OpenAnswers/panther-aws-events.git cd panther-aws-events . Once the source code has been downloaded, the panther-aws-events project needs to be built using the sam build command. The panther-aws-events build is dependent on Node.js v12. To build the panther-aws-events project, you need to either install Node.js v12 locally or use the sam build --use-container option, which uses an Amazon provided AWS SAM Node.js v12 build container, as detailed below. Building the AWS Lambda function (using Node.js) . If you have node v12 installed, you can use this build step: . # Build a Node.js 12 application using a locally installed version of Node.js sam build . NOTE: Many linux distributions include an old version of node. Node.js v12 can be installed for Linux using NVM. Building the AWS Lambda function (using Docker) . If you have docker installed, you can use this build step, which has the advantage of being platform agnostic: . # Build a Node.js 12 application using an Amazon container image pulled from DockerHub sam build --use-container --build-image amazon/aws-sam-cli-build-image-nodejs12.x . Deploying the AWS Lambda function . Using the guided option will interactively prompt for the values from the checklist above. sam deploy --guided . NOTE: SAM uses the same configuration as the AWS CLI, so if you use many different accounts, ensure that your profile is pointing to the correct account that you wish to install the collector in. You will then be asked a series of questions to deploy the code to your account and will be prompted for the following values: . | APIToken | APIUrl | . The process will look similar to this: . &gt; sam deploy --guided Configuring SAM deploy ====================== Looking for samconfig.toml : Found Reading default arguments : Success Setting default arguments for 'sam deploy' ========================================= Stack Name [AWS-Events2Panther]: AWS Region [us-east-1]: eu-west-3 Parameter APIToken []: XXXXXXXxxxxxxxxXXXXXXXxxxxxxXXXX Parameter APIUrl []: https://example.app.panther.support/api/event/create #Shows you resources changes to be deployed and require a 'Y' to initiate deploy Confirm changes before deploy [Y/n]: y #SAM needs permission to be able to create roles to connect to the resources in your template Allow SAM CLI IAM role creation [Y/n]: y Save arguments to samconfig.toml [Y/n]: y Looking for resources needed for deployment: Not found. Creating the required resources... Successfully created! Managed S3 bucket: aws-sam-cli-managed-default-samclisourcebucket-1f8nf3gegbbkw A different default S3 bucket can be set in samconfig.toml Saved arguments to config file Running 'sam deploy' for future deployments will use the parameters saved above. The above parameters can be changed by modifying samconfig.toml Learn more about samconfig.toml syntax at https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-config.html Deploying with following values =============================== Stack name : AWS-Events2Panther Region : eu-west-3 Confirm changeset : True Deployment s3 bucket : aws-sam-cli-managed-default-samclisourcebucket-1f8nf3gegbbkw Capabilities : [\"CAPABILITY_IAM\"] Parameter overrides : {'APIToken': 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', 'APIUrl': 'https://example.app.panther.support/api/event/create'} Initiating deployment ===================== Uploading to AWS-Events2Panther/137eca46a121660aff6a2546ca442e9c 128369 / 128369.0 (100.00%) Uploading to AWS-Events2Panther/1c7e5fc5e3c565cd85c8bd192ea7b34e.template 1700 / 1700.0 (100.00%) Waiting for changeset to be created.. CloudFormation stack changeset --------------------------------------------------------------------------------------------------------- Operation LogicalResourceId ResourceType --------------------------------------------------------------------------------------------------------- + Add Events2PantherFunctionAllEventsPermission AWS::Lambda::Permission + Add Events2PantherFunctionAllEvents AWS::Events::Rule + Add Events2PantherFunctionRole AWS::IAM::Role + Add Events2PantherFunction AWS::Lambda::Function + Add Events2PantherLogGroup AWS::Logs::LogGroup --------------------------------------------------------------------------------------------------------- Changeset created successfully. arn:aws:cloudformation:eu-west-3:787224169971:changeSet/samcli-deploy1580150955/b6085648-3f8c-41eb-aaac-136075652a08 Previewing CloudFormation changeset before deployment ====================================================== Deploy this changeset? [y/N]: y 2020-01-27 18:49:40 - Waiting for stack create/update to complete CloudFormation events from changeset -------------------------------------------------------------------------------------------------------------------------------------------------------- ResourceStatus ResourceType LogicalResourceId ResourceStatusReason -------------------------------------------------------------------------------------------------------------------------------------------------------- CREATE_IN_PROGRESS AWS::IAM::Role Events2PantherFunctionRole - CREATE_IN_PROGRESS AWS::Logs::LogGroup Events2PantherLogGroup - CREATE_IN_PROGRESS AWS::IAM::Role Events2PantherFunctionRole Resource creation Initiated CREATE_COMPLETE AWS::Logs::LogGroup Events2PantherLogGroup - CREATE_IN_PROGRESS AWS::Logs::LogGroup Events2PantherLogGroup Resource creation Initiated CREATE_COMPLETE AWS::IAM::Role Events2PantherFunctionRole - CREATE_IN_PROGRESS AWS::Lambda::Function Events2PantherFunction - CREATE_IN_PROGRESS AWS::Lambda::Function Events2PantherFunction Resource creation Initiated CREATE_COMPLETE AWS::Lambda::Function Events2PantherFunction - CREATE_IN_PROGRESS AWS::Events::Rule Events2PantherFunctionAllEvents Resource creation Initiated CREATE_IN_PROGRESS AWS::Events::Rule Events2PantherFunctionAllEvents - CREATE_COMPLETE AWS::Events::Rule Events2PantherFunctionAllEvents - CREATE_IN_PROGRESS AWS::Lambda::Permission Events2PantherFunctionAllEventsPermission Resource creation Initiated CREATE_IN_PROGRESS AWS::Lambda::Permission Events2PantherFunctionAllEventsPermission - CREATE_COMPLETE AWS::Lambda::Permission Events2PantherFunctionAllEventsPermission - CREATE_COMPLETE AWS::CloudFormation::Stack AWS-Events2Panther - -------------------------------------------------------------------------------------------------------------------------------------------------------- Stack AWS-Events2Panther outputs: --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- OutputKey-Description OutputValue --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- Events2PantherFunctionIamRole - Implicit IAM Role created for the AWS Events to Panther function arn:aws:iam::787224169971:role/AWS-Events2Panther-Events2PantherFunctionRole-WO1GMSJJVFP5 Events2PantherFunction - AWS Events to Panther Lambda Function ARN arn:aws:lambda:eu-west-3:787224169971:function:AWS-Events2Panther --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- Successfully created/updated stack - AWS-Events2Panther in eu-west-3 . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#installing-aws-events2panther",
    "relUrl": "/panther/sending-events/aws#installing-aws-events2panther"
  },"18": {
    "doc": "AWS Events",
    "title": "Running",
    "content": "Once the code has been successfully registered in AWS, you should start seeing a stream of events into your Panther Console. Manual testing can be done by following the Sending some test events instructions. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#running",
    "relUrl": "/panther/sending-events/aws#running"
  },"19": {
    "doc": "AWS Events",
    "title": "Configuring the captured events",
    "content": "There are two approaches to configuring which events will trigger the Lambda function. | Adding new YAML config to the SAM template (template.yaml) that will generate the triggers for you. | Setting up new triggers in the AWS Console. | . Depending on your use case you may prefer either approach. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#configuring-the-captured-events",
    "relUrl": "/panther/sending-events/aws#configuring-the-captured-events"
  },"20": {
    "doc": "AWS Events",
    "title": "Generating new event triggers using SAM",
    "content": "In the Resources section of the SAM template (template.yaml), the PantherMessageProxyFunction contains a section called Events. You will see that an event trigger has been configured (commented out) that will trigger the Lambda function when a CloudWatchEvent is created that has a source value of aws.guardduty: . GuardDuty: Type: CloudWatchEvent Properties: Pattern: Source: - aws.guardduty . This event pattern will specify the fields to match up when filtering the CloudWatchEvents. If the filter pattern matches that of the event JSON, it will trigger the function. If you wish to capture some events, you can uncomment the following line from the start of the lambdaHandler function in the e2p/e2p.js file: . console.log(\"Event Received: \" + JSON.stringify(event, null, 2)); . This will write the event JSON to the CloudWatch Logs log group related to the Lambda function. Some other examples of pattern filters are, any EC2 instances that are terminated: . EC2Events: Type: CloudWatchEvent Properties: Pattern: Source: - aws.ec2 Detail: State: - terminated . Or if you wish to match CloudFormation Lambda code deployment in eu-west-1 or eu-west-2, you could write a filter like this: . LambdaUpdates: Type: CloudWatchEvent Properties: Pattern: source: - aws-lambda Detail: AwsRegion: - eu-west-1 - eu-west-2 UserAgent: - cloudformation.amazonaws.com . AWS documentation to help you create more filters can be found here (although it’s in JSON): . docs.aws.amazon.com/eventbridge/latest/userguide/filtering-examples-structure.html . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#generating-new-event-triggers-using-sam",
    "relUrl": "/panther/sending-events/aws#generating-new-event-triggers-using-sam"
  },"21": {
    "doc": "AWS Events",
    "title": "Setting up event triggers in the AWS console",
    "content": "The SAM CloudFormation template includes a rule to accept all events, and send them to the Lambda function. However, you can also disable that one and create your own more specific rules. Rules can be accessed from two locations: . console.aws.amazon.com/cloudwatch/home . Or here: . console.aws.amazon.com/events/home . On either page you should click on the ‘Create rule’ button. Under Define pattern, select Event pattern, then select Pre-defined pattern by service, select ‘AWS’, then select ‘All Services’. This will behave in the same way as CloudTrail, by passing all AWS events to the target. As shown below: . Next, under Select targets ensure the target is set to ‘Lambda function’, and then select the function id for the one you uploaded. It will be in the format: AWS-Events2Panther-{stack name} . Once done, you can click on the Create button at the bottom of the page. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#setting-up-event-triggers-in-the-aws-console",
    "relUrl": "/panther/sending-events/aws#setting-up-event-triggers-in-the-aws-console"
  },"22": {
    "doc": "AWS Events",
    "title": "Advanced event filtering",
    "content": "If you wish to only send events to Panther for particular services, you can select ‘Custom pattern’, and paste in an event pattern. Examples of patterns . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#advanced-event-filtering",
    "relUrl": "/panther/sending-events/aws#advanced-event-filtering"
  },"23": {
    "doc": "AWS Events",
    "title": "All events from multiple services:",
    "content": "{ \"source\": [ \"aws.apigateway\", \"aws.ec2\" ] } . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#all-events-from-multiple-services",
    "relUrl": "/panther/sending-events/aws#all-events-from-multiple-services"
  },"24": {
    "doc": "AWS Events",
    "title": "A particular event type from a service:",
    "content": "{ \"source\": [ \"aws.ec2\" ], \"detail-type\": [ \"EBS Snapshot Notification\" ] } . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#a-particular-event-type-from-a-service",
    "relUrl": "/panther/sending-events/aws#a-particular-event-type-from-a-service"
  },"25": {
    "doc": "AWS Events",
    "title": "EC2 instance state change",
    "content": "When an instance has been terminated . { \"source\": [ \"aws.ec2\" ], \"detail-type\": [ \"EC2 Instance State-change Notification\" ], \"detail\": { \"state\": [ \"terminated\" ] } } . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#ec2-instance-state-change",
    "relUrl": "/panther/sending-events/aws#ec2-instance-state-change"
  },"26": {
    "doc": "AWS Events",
    "title": "Filtering more complex events",
    "content": "Filtering of events can be much more complex, here is Amazons guide: . docs.aws.amazon.com/eventbridge/latest/userguide/filtering-examples-structure.html . You can setup multiple filter rules, each looking for a different type of event from different services that all have the same target Lambda function. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#filtering-more-complex-events",
    "relUrl": "/panther/sending-events/aws#filtering-more-complex-events"
  },"27": {
    "doc": "AWS Events",
    "title": "Configuring the messages sent to Panther",
    "content": "The messages sent to Panther are generated in the JavaScript Lambda function using the information extracted from the JSON AWS event data. Therefore, to edit the message generated for an event that is already handled, all you have to do is find the correct function and edit it to put the data you wish in the correct fields. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#configuring-the-messages-sent-to-panther",
    "relUrl": "/panther/sending-events/aws#configuring-the-messages-sent-to-panther"
  },"28": {
    "doc": "AWS Events",
    "title": "Currently supported event types",
    "content": ". | AWS API Call via CloudTrail | EC2 Instance State-change Notification | GuardDuty Finding | Security Hub Findings | Config Configuration Item Change | . To handle a new event type you should replicate the approach used for other events: . | Create a new function that accepts a JSON object representing the AWS event data. | The source event may contain an array of child events, create one or more Panther message from the source data. The Panther message format can be seen below. | Add a new case statement into the exports.lambdaHandler() function that calls your new function and puts the returned data into the data variable. The data must be an array of one or more Panther messages. | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#currently-supported-event-types",
    "relUrl": "/panther/sending-events/aws#currently-supported-event-types"
  },"29": {
    "doc": "AWS Events",
    "title": "Panther JSON message",
    "content": "The Panther JSON message has the following structure: . \"event\": { \"node\": \"thing being monitored\", \"tag\": \"A tag used for grouping\", \"summary\": \"A message used to describe the event\", \"severity\": 1 } . The severity is on a scale from 0-5, with . | 0=clear | 1=indeterminate | 2=warning, | 3=minor, | 4=major, | 5=critical | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#panther-json-message",
    "relUrl": "/panther/sending-events/aws#panther-json-message"
  },"30": {
    "doc": "AWS Events",
    "title": "Testing changes locally",
    "content": "SAM can use a local Docker image to test Lambda functions on your machine. To run the Lambda function with the test data first update the env.json file with your values for APIUrl and APIToken as described in the checklist. NOTE: To create a Panther APIToken please consult the admin documentation . ❯ cat env.json { \"Parameters\": { \"API_URL\": \"https://&lt;PANTHER_NAME&gt;.app.panther.support/api/event/create\", \"API_TOKEN\": \"&lt;PANTHER_API_TOKEN&gt;\" } } . Then invoke the Lambda function with: . sam build sam local invoke Events2PantherFunction -e events/&lt;filename&gt;.json --env-vars env.json . NOTE: Replace &lt;filename&gt;.json with an actual file, some examples are provided in the GitHub repository: . | events/guardduty1.json | events/guardduty2.json | . Sample events can sometimes be found in the AWS documentation, or can be output to the console / CloudWatch Logs. The function will automatically output the event JSON when the processing code causes an exception, or a handler is not available for that particular type of event. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#testing-changes-locally",
    "relUrl": "/panther/sending-events/aws#testing-changes-locally"
  },"31": {
    "doc": "AWS Events",
    "title": "Checking the logs in AWS",
    "content": "Lambda functions produce log output that is put into a CloudWatch Log group. Navigate to: console.aws.amazon.com/cloudwatch/home . Then look for the log group in the format: /aws/lambda/AWS-Events2Panther . The log group will contain multiple logs written each time the function is triggered by an event. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#checking-the-logs-in-aws",
    "relUrl": "/panther/sending-events/aws#checking-the-logs-in-aws"
  },"32": {
    "doc": "AWS Events",
    "title": "Sending some test events",
    "content": "After installation has completed a new Lambda function will have been registered with the supplied Stack Name by default this will be called AWS-Events2Panther. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#sending-some-test-events",
    "relUrl": "/panther/sending-events/aws#sending-some-test-events"
  },"33": {
    "doc": "AWS Events",
    "title": "Simulating an EC2 instance state change",
    "content": "Find your Lambda function, if you imported with default values it will be named AWS-Events2Panther and should be listed on aws.amazon.com/lambda/home . You should see something like . Sample test data . In order to test Events2Panther we’ll need some test data, you can copy the example data below, or provide your own. { \"id\":\"7bf73129-1428-4cd3-a780-95db273d1602\", \"detail-type\":\"EC2 Instance State-change Notification\", \"source\":\"aws.ec2\", \"account\":\"123456789012\", \"time\":\"2019-11-11T21:29:54Z\", \"region\":\"us-east-1\", \"resources\":[ \"arn:aws:ec2:us-east-1:123456789012:instance/i-abcd1111\" ], \"detail\":{ \"instance-id\":\"i-abcd1111\", \"state\":\"pending\" } } . It should look something like this: . Sending a sample event . | Click the button to send the event. | Verify in your Panther Console that the event was received (it may take a couple of seconds) . | . | Repeat sending events, and the corresponding Panther Events tally will start increasing, e.g. | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#simulating-an-ec2-instance-state-change",
    "relUrl": "/panther/sending-events/aws#simulating-an-ec2-instance-state-change"
  },"34": {
    "doc": "AWS Events",
    "title": "Uninstalling",
    "content": "If you wish to remove the CloudFormation stack that SAM creates you should run: . aws cloudformation delete-stack --stack-name AWS-Events2Panther --region &lt;aws region&gt; . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws#uninstalling",
    "relUrl": "/panther/sending-events/aws#uninstalling"
  },"35": {
    "doc": "AWS Events",
    "title": "AWS Events",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/aws",
    "relUrl": "/panther/sending-events/aws"
  },"36": {
    "doc": "Server Global rules",
    "title": "Global Rules",
    "content": "Global rules are applied to every event that is parsed into Panther. These would be common rules intended to apply to most if not every group. An example would be a global rule to discard any events that are sent in due to the registry file being in use by another application or service. To implement this example: . | Create a new rule . | Enter a name for the rule and choose a selector from the drop down menu. In this case, use match to check for a string in the summary of the event. | Select a field, in this case the summary field of the log event. | Enter the string to match the field with in the summary. In this case, the message is /detected your registry/. | The action to select is to delete the event log from the console. | Save the new rule and click deploy to forward the changes to the server. | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/global#global-rules",
    "relUrl": "/panther/rules/global#global-rules"
  },"37": {
    "doc": "Server Global rules",
    "title": "Server Global rules",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/global",
    "relUrl": "/panther/rules/global"
  },"38": {
    "doc": "Server Group rules",
    "title": "Group Rules",
    "content": "Group rules are used to sort the event logs into different groups, based on user discretion. An example of this would be splitting the events based on the service type, such as web service or OS. A “web service” group could handle events related to Apache, such as downtime for example, and an “OS” group could handle events such as system crashes. Sorting the event logs into groups such as these can help maximize efficiency by sending them to the relevant teams. To create a new group rule: . | Create a new group . | Enter the name of the group you want to make. In this case there are two groups – one named Operating System and one named Apache Web Service. | To match any event log with this group, set a rule in the group selector. In this case, the rule is going to check the tag of the event log for the string os. Once this match has been found, it will run through the rules in the group one by one against the event log entry, carrying out any processing required. To do this, click on the pencil to open up the group selector. | Create a rule to match the tag field with the word os, and save it. | The new group selector can now match event logs containing the os tag against any rules in the group. To create a new rule for the group, click on the down arrow for it and select ‘Create a rule for…’ . | This section is very similar to the Global Rule section. In this example, create a rule to log and group any failed su authentication events. This rule is sending any event log that contains the string FAILED su for .* to the Operating System group and setting the severity to 3. | Click Save and enable the deployment to the server. | . An example of this group rule being used is shown in the API section. ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/group#group-rules",
    "relUrl": "/panther/rules/group#group-rules"
  },"39": {
    "doc": "Server Group rules",
    "title": "Server Group rules",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/group",
    "relUrl": "/panther/rules/group"
  },"40": {
    "doc": "Views",
    "title": "Overview",
    "content": ". Views provide simple, configurable match criteria which may be used with the console filters to narrow down the events displayed to useful sub-sets. For example, the Mine view provided by default displays events assigned to the current user. ",
    "url": "https://openanswers.github.io/panther-docs/panther/views#overview",
    "relUrl": "/panther/views#overview"
  },"41": {
    "doc": "Views",
    "title": "Adding Views",
    "content": "Views may be added by completing the three input boxes at the bottom of the User Views list and clicking the Add button. All three boxes must be completed, as described below. ",
    "url": "https://openanswers.github.io/panther-docs/panther/views#adding-views",
    "relUrl": "/panther/views#adding-views"
  },"42": {
    "doc": "Views",
    "title": "Name",
    "content": "This should be a short text string to be used as an identifier for the new view. This will be displayed both in the User Views list and in the View filter selection drop-down box at the top of the console page. ",
    "url": "https://openanswers.github.io/panther-docs/panther/views#name",
    "relUrl": "/panther/views#name"
  },"43": {
    "doc": "Views",
    "title": "Field",
    "content": "The event field name, chosen from a drop-down list of available data elements, corresponds to one of the fields shown in the console events display area. This is the field which must match the specified value in order to be displayed in the new view. ",
    "url": "https://openanswers.github.io/panther-docs/panther/views#field",
    "relUrl": "/panther/views#field"
  },"44": {
    "doc": "Views",
    "title": "Value",
    "content": "The value which the selected field must match in order to be displayed. There are three formats available. String . The default format is the exact value to match against the field content as a literal string. summary: Authentication failure . Regular Expression . Rather than literal string values, regular expressions may be specified by surrounding them with forward slash characters /. summary: /.*Authentication.*/ . Number . Some fields contain numeric values, which may be matched by specifying straightforward numbers. tally: 5 . To match numbers that are in fact strings, surround the required value in double quotes. summary: \"42\" . ",
    "url": "https://openanswers.github.io/panther-docs/panther/views#value",
    "relUrl": "/panther/views#value"
  },"45": {
    "doc": "Views",
    "title": "Deleting a View",
    "content": "Views can be deleted by first clicking on them in the User Views list, then clicking on the red trash icon. ",
    "url": "https://openanswers.github.io/panther-docs/panther/views#deleting-a-view",
    "relUrl": "/panther/views#deleting-a-view"
  },"46": {
    "doc": "Views",
    "title": "The Default View",
    "content": "It is also possible to configure a default view for the console page. To do this, click on the view in the User Views list, then click on the Set Default button. ",
    "url": "https://openanswers.github.io/panther-docs/panther/views#the-default-view",
    "relUrl": "/panther/views#the-default-view"
  },"47": {
    "doc": "Views",
    "title": "Views",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/views",
    "relUrl": "/panther/views"
  },"48": {
    "doc": "Getting Started",
    "title": "Introduction",
    "content": "The (beta) cloud-based version of Panther is accessible at app.panther.support. After a simple Sign-up process your dedicated secure Panther instance will be automatically provisioned within the Panther Cloud. When signing-up you will be asked to choose a unique name for your Console which will then be accessible at https://{example}.app.panther.support. ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started#introduction",
    "relUrl": "/panther/getting-started#introduction"
  },"49": {
    "doc": "Getting Started",
    "title": "Using Panther for the First Time",
    "content": "Logging in (app.panther.support) . Login for the first time as the admin user using the password you gave during Sign-up - this is the default user account that will be used to administer Panther for the first time. Additional users can then be created from the admin tab. Logging in (docker-compose.yml) . Note Instructions for launching the Docker images are on github.com/openanswers/panther-core . After starting the Panther containers for the first time an initial password will have been set. Unless configured that defaults will be: . | Username | admin | . | Password | admin | . This can be changed through the environment settings in docker-compose.yml e.g. event-console: ... environment: - ADMIN_USERNAME=admin - ADMIN_PASSWORD=admin - ADMIN_EMAIL=you@example.com . Welcome to the dashboard . The first screen that you will see is the Dashboard, which will look like this: . Clicking on Open Console will take you to the Console, which will look like this: . … this example shows that the Panther instance currently has two events in it. These particular messages are coming from the instance’s internal syslogd and http agents which will send periodic “keep-alive” events to indicate that they are healthy. Here, Agent http is alive and Agent syslogd are the details of the event, contained within the summary field (see next section). Double-click on an event to explore it a bit more. ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started#using-panther-for-the-first-time",
    "relUrl": "/panther/getting-started#using-panther-for-the-first-time"
  },"50": {
    "doc": "Getting Started",
    "title": "Anatomy of an Event",
    "content": "A Panther Event is comprised of a number of data fields that are analagous to The Syslog Protocol. | Field | Meaning | Example value | . | _id | Internal Panther ID for the event | 5d8a4143f9f0b20100f778f9 | . | acknowledged | Indicates whether the event has been acknowledged | false | . | agent | The agent that received the event | syslogd | . | external_id | A reference to an external identifier (e.g. incident reference) | OA:12345 | . | first_occurrence | Date/time when the first event was received | 2019-09-24T16:16:03.825Z | . | last_occurrence | Date/time when the last event was received | 2019-10-04T12:22:49.063Z | . | group | Grouping applied to this event (determined by Group Rules) | Windows Servers | . | identifier | Unique identifier for this event (used for de-duplication) | 10740737389554512696 | . | node | Hostname of the device/server that originated the event | MYWINSERVER123 | . | owner | The Panther user that has taken ownership of this event | dave | . | severity | Event Severity (0-5) | 5 _(Warning)_ | . | state_change | Date/time when the last change to the event occurred | 2019-10-04T12:22:49.066Z | . | summary | Event details | ERROR_OUTOFMEMORY: Not enough storage is available to complete this operation | . | tag | Name of program or process that generated the event | Microsoft-Windows-Kernel-General | . | tally | Count of event occurrences | 1416 | . By default, a unique Event is defined by the combination of the fields: {node}:{severity}:{tag}:{summary}. Multiple events that have the same values for these fields will be treated as the same event, with a counter (tally) incremented for each occurrence. Simple Rules can be used to adjust the contents of these fields (for example, to remove unique data from the summary field) which allows Events to be de-duplicated and enriched, making them easy to manage. Double-click on an event and select Fields to see its full contents: . See also: . | Syslog Mappings | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started#anatomy-of-an-event",
    "relUrl": "/panther/getting-started#anatomy-of-an-event"
  },"51": {
    "doc": "Getting Started",
    "title": "Set Up Event Sources",
    "content": "There are currently two main methods to import event logs into Panther from client event sources. The most straightforward of these is by means of compatible logging software, while an HTTP based API is also available for integration with bespoke client applications. ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started#set-up-event-sources",
    "relUrl": "/panther/getting-started#set-up-event-sources"
  },"52": {
    "doc": "Getting Started",
    "title": "Logging Software",
    "content": "Panther offers the capability to receive event logs directly from supported third-party logging software. In order to facilitate this, archives of configuration files are available for download from the Panther admin page. More detailed information on the download procedure is available, along with configuration guides for each supported system, in the client configuration section. ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started#logging-software",
    "relUrl": "/panther/getting-started#logging-software"
  },"53": {
    "doc": "Getting Started",
    "title": "REST API",
    "content": "For use cases where programmatic control is needed over the submission of event log entries, Panther provides an HTTP based REST API, incorporating a key for security. More details on this are available in the API section. ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started#rest-api",
    "relUrl": "/panther/getting-started#rest-api"
  },"54": {
    "doc": "Getting Started",
    "title": "Graylog (future)",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started#graylog-future",
    "relUrl": "/panther/getting-started#graylog-future"
  },"55": {
    "doc": "Getting Started",
    "title": "SNMP Trap (future)",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started#snmp-trap-future",
    "relUrl": "/panther/getting-started#snmp-trap-future"
  },"56": {
    "doc": "Getting Started",
    "title": "Event Source Examples",
    "content": "The freely available software packages listed below can act as event sources for Panther. | Software | Official Website | Panther Configuration | . | ![NXLog](/panther-docs/panther/getting-started/media/nxlog-logo.png){:height=\"30px\" width=\"80px\"} | [Documentation](https://nxlog.co/documentation){:target=\"_blank\"} | [Linux](/panther-docs/panther/sending-events/nxlog#nxlog-configuration-linux), [Windows](/panther-docs/panther/sending-events/nxlog#nxlog-configuration-windows) | . | ![Rsyslog](/panther-docs/panther/getting-started/media/rsyslog-logo.png){:height=\"30px\" width=\"80px\"} | [Documentation](https://www.rsyslog.com/doc/master/index.html){:target=\"_blank\"} | [Linux](/panther-docs/panther/sending-events/rsyslog#rsyslog-configuration) | . | Syslog-ng | TODO | TODO | . | Log4j | TODO | TODO | . | Log4Net | TODO | TODO | . | ![AWS](/panther-docs/img/aws-white.png){:height=\"30px\"} | TODO | [Linux](/panther-docs/panther/sending-events/aws) | . Examples of approaches that can be used to monitor infrastructure and applications. | Technology | How | . | Linux | TODO | . | Windows | TODO | . | Cisco | TODO | . | MuleSoft Anypoint Platform | TODO | . | Dell Boomi | TODO | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started#event-source-examples",
    "relUrl": "/panther/getting-started#event-source-examples"
  },"57": {
    "doc": "Getting Started",
    "title": "Configure a Global Rule",
    "content": "Global rules are rules that will be applied to every event log that is received by Panther. By default, you will have some syslog rules and a simple example. There is a tutorial for adding further global rules in the Rules section. ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started#configure-a-global-rule",
    "relUrl": "/panther/getting-started#configure-a-global-rule"
  },"58": {
    "doc": "Getting Started",
    "title": "Configure a Group rule",
    "content": "There is a tutorial on setting up group rules in the Rules section, along with a working example in the API section. ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started#configure-a-group-rule",
    "relUrl": "/panther/getting-started#configure-a-group-rule"
  },"59": {
    "doc": "Getting Started",
    "title": "Getting Started",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/getting-started",
    "relUrl": "/panther/getting-started"
  },"60": {
    "doc": "About",
    "title": "Background",
    "content": "Panther has been designed and developed by Open Answers to meet our operational needs and those of our customers, having provided support and system monitoring services over three decades. Within the open source and SaaS monitoring space there are myriads of monitoring tools available. The typical monitoring toolset implements active monitoring, where the status of a component is checked or a synthetic transaction is tested repeatedly on a schedule. The outcome of that probe/status check/transaction etc is an active monitoring event. A passive event is an event of interest within an application or system that is generally triggered by real system or user behaviour. See some Example Events. The typical IT operational support team needs an event management platform in its toolset - a console and dashboard where events of all kinds can be aggregated, managed and assessed - all configured through simple rules that help support teams decide what the priority events are and where action needs to be taken. In a constantly changing IT support environment, the take-on of new applications and systems to support means that it is not possible to predict what kind of events (logged messages, errors, exceptions etc) may occur during day to day operations. To deal with this uncertainty, effective support teams will devise ways to ensure that events generated by critical systems and applications are checked regularly, or as soon as they occur. The open source and SaaS monitoring tools landscape is lacking when it comes to monitoring events in this way. There has traditionally been a very limited choice of expensive and difficult to implement “Enterprise” event management tools of this type that may be categorised as “manager of managers”. More recently, Log Management tools have appeared on the market which provide a way to aggregate and search historical log information. These are effective for investigating issues but have the limitation that they are not efficient for use in first-line support scenarios. By surfacing events of all types in one place, in a way that makes them easy to manage, Panther provides the perfect complement to System Monitoring, Log Management, Time-series database and Ticketing tools. Example Events . | Event Type | Example | . | Business Event | Customer unable to make a purchase | . | Operating system event | Filesystem is full | . | Operational event | Scheduled job finished unsuccessfully | . | Security event | Suspicious behavior detected by Intrusion Detection System | . | Application event | Application generated exception | . | Hardware event | UPS battery low | . | Network event | Switch detected spanning-tree loop | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/about#background",
    "relUrl": "/panther/about#background"
  },"61": {
    "doc": "About",
    "title": "Architecture",
    "content": "The (beta) cloud-based version of Panther is a service that ingests events received from TLS-secured authenticated sources using the Syslog protocol or Panther API. The Console provides a rich set of features that allow you to manage events and configure the service using a web browser. ",
    "url": "https://openanswers.github.io/panther-docs/panther/about#architecture",
    "relUrl": "/panther/about#architecture"
  },"62": {
    "doc": "About",
    "title": "ITSM Event Management",
    "content": "Thousands (or millions) of events happen across your IT infrastructure every day. Why? Because an event is simply a change to the state of an IT service or configuration item (CI) that is significant to its management. A server moving from online to idle could be an event, or the completion of a regular server maintenance script, or even an unexpected state at the end of a transaction. They’re worth knowing about, and there may even be an action you wish to take as a result. The objective of event management is to detect events, analyse them, and determine the right control action (if any). By doing so, the event management process also provides a strong foundation for service assurance, reporting, and service improvement. It’s important to know, though, that monitoring and event management are not the same thing. Monitoring is certainly a component of event management, in that it is a useful way to detect events as they occur. Event management, on the other hand, is focused on extracting meaning out of events, to help IT take appropriate actions (when required). Panther is a monitoring tool that enables your IT service management Event Management process. Open Answers Event Management Flow: . ",
    "url": "https://openanswers.github.io/panther-docs/panther/about#itsm-event-management",
    "relUrl": "/panther/about#itsm-event-management"
  },"63": {
    "doc": "About",
    "title": "ITSM Incident Management",
    "content": "In IT service management (ITSM), an Incident management process ensures that normal service operation is restored as quickly as possible and the business impact is minimized after an unplanned interruption or reduction in quality to an IT service, or an event that could increase the risk of this happening. All incidents are events, but not all events are incidents. Event and Incident management activities performed by First line support personnel will frequently overlap when they involve the diagnosis, identification, logging, categorisation, prioritisation of incidents. Panther is a monitoring tool that enables your IT service management Incident Management process. Open Answers Event Management Flow: . ",
    "url": "https://openanswers.github.io/panther-docs/panther/about#itsm-incident-management",
    "relUrl": "/panther/about#itsm-incident-management"
  },"64": {
    "doc": "About",
    "title": "Note",
    "content": "ITIL® is an acronym that is often used in reference to describing IT service management practices. The term ITIL® should only be used to describe AXELOS’ proprietary form of IT service management. Previously owned by the Cabinet Office, ITIL® and IT Infrastructure Library® are now Registered Trade Marks of AXELOS Limited. ",
    "url": "https://openanswers.github.io/panther-docs/panther/about#note",
    "relUrl": "/panther/about#note"
  },"65": {
    "doc": "About",
    "title": "About",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/about",
    "relUrl": "/panther/about"
  },"66": {
    "doc": "API Console",
    "title": "Introduction",
    "content": ". The API Console is a straightforward way to begin using the Panther API to submit event logs over HTTP. The purpose of the page is to allow the supported API fields to be manually input and then automatically formatted into the JSON structure required by Panther. The result may then either be submitted to the application from the page or copied into another utility, such as curl - for which an example input is generated at the bottom of the page. ",
    "url": "https://openanswers.github.io/panther-docs/panther/api#introduction",
    "relUrl": "/panther/api#introduction"
  },"67": {
    "doc": "API Console",
    "title": "Creating an Event",
    "content": "To prepare a new event definition for transmission to Panther, fill in the input fields in the top section of the Event API box. ",
    "url": "https://openanswers.github.io/panther-docs/panther/api#creating-an-event",
    "relUrl": "/panther/api#creating-an-event"
  },"68": {
    "doc": "API Console",
    "title": "API Key",
    "content": "For security, the API requires a valid API key in order to accept event data. These can be generated by users in the administration group from the admin page. The API key input field is a drop-down list that contains the currently available keys. ",
    "url": "https://openanswers.github.io/panther-docs/panther/api#api-key",
    "relUrl": "/panther/api#api-key"
  },"69": {
    "doc": "API Console",
    "title": "Node",
    "content": "The node is the host name that will be applied to the event log. ",
    "url": "https://openanswers.github.io/panther-docs/panther/api#node",
    "relUrl": "/panther/api#node"
  },"70": {
    "doc": "API Console",
    "title": "Tag",
    "content": "The tag is a name used as meta-data to identify and distinguish between different applications on the same host, or any other similar purpose. ",
    "url": "https://openanswers.github.io/panther-docs/panther/api#tag",
    "relUrl": "/panther/api#tag"
  },"71": {
    "doc": "API Console",
    "title": "Summary",
    "content": "The summary contains the message body of the event log. It describes the event that took place, and will give detailed information such as the error message or any diagnostics. It can also contain specific pieces of data about the event, such as the number of retries a failed login attempt was made. ",
    "url": "https://openanswers.github.io/panther-docs/panther/api#summary",
    "relUrl": "/panther/api#summary"
  },"72": {
    "doc": "API Console",
    "title": "Severity",
    "content": "The severity indicates how important the event log is, and can range from 0 (clear) to 5 (emergency). ",
    "url": "https://openanswers.github.io/panther-docs/panther/api#severity",
    "relUrl": "/panther/api#severity"
  },"73": {
    "doc": "API Console",
    "title": "Sending an Event",
    "content": "Once the event fields have been filled in, the event can be sent to Panther by clicking on the Send button. The response will be displayed in the Response Body box at the bottom of the page. Alternatively, events can be sent using a different application by submitting the message displayed in the Request Body box as POST data to the address displayed in the URL box. One common method would be to use the example curl command line shown in the Curl box. ",
    "url": "https://openanswers.github.io/panther-docs/panther/api#sending-an-event",
    "relUrl": "/panther/api#sending-an-event"
  },"74": {
    "doc": "API Console",
    "title": "Example",
    "content": "This example of sending an event log using the GUI on the API page will also show how the example group rule works to put a log containing FAILED su in its summary into the Operating System group. | Select an API key from the drop-down box. | To create an event that will handled by the Operating System group, the Tag for the event must be os and the Summary must include the string FAILED su for. The Node can be any string value, and the severity level can be any value from 0 to 5, because a new value will be set by the group rule. Notice that the contents of the Request Body and Curl sections change as the input fields are set. | Once fields have been set, click the Send button. The Response Body section will update with the reply from Panther, indicating whether the request was successful or if there was a problem. | If all went well, the new entry should be in the console along with all the other event logs. | . If the the custom group rule has been applied, the group will be set to Operating System and the severity will be set to 3 - which is also shown by the entry being displayed in yellow. ",
    "url": "https://openanswers.github.io/panther-docs/panther/api#example",
    "relUrl": "/panther/api#example"
  },"75": {
    "doc": "API Console",
    "title": "API Console",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/api",
    "relUrl": "/panther/api"
  },"76": {
    "doc": "Rules",
    "title": "Overview",
    "content": "Rules control how log messages are turned into events. They can be used to discard, de-duplicate or modify the events that appear in the Panther console. Events are received from an external source, processed by user defined rules, and finally stored on the Panther server. ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules#overview",
    "relUrl": "/panther/rules#overview"
  },"77": {
    "doc": "Rules",
    "title": "Processing order",
    "content": ". The set of Syslog Mappings are processed first, followed by the Global Rules and, finally, any optional Groups Rules. ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules#processing-order",
    "relUrl": "/panther/rules#processing-order"
  },"78": {
    "doc": "Rules",
    "title": "Details",
    "content": "Each rule definition is stored in a YAML file. A basic rule has a name followed by a Select verb, such as match, and an Action verb, such as discard: . name: 'Rule name' match: some_field: value discard: true . Multiple Selects are interpreted as logical “and” operations. This example is equivalent to “Select WHERE some_field matches the regular expression /value/ AND where other_field equals value”: . match: some_field: !!js/regexp /value/ equals: other_field: value . Multiple Actions can be specified too: . discard: true stop: true . A RuleSet, which groups the rules into logical areas, is made up of an array of Rules. These are processed in order, until the last rule is found or a stop or stop_ruleset action is encountered: . - name: 'Rule name' match: some_field: value set: new_field: 17 - name: 'No junk' equals: my_field: 'linux' set: that_field: 'Torvalds' . There are multiple RuleSets used during processing. The Global RuleSet is processed first, followed by any Group rules. Only one group will be matched, based on the Select verbs, and its rules then processed. Discard and Dedupe are shortcuts for what end up as rules that are placed before the rest of the RuleSet. ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules#details",
    "relUrl": "/panther/rules#details"
  },"79": {
    "doc": "Rules",
    "title": "Rule Order",
    "content": "Rules are applied in the following order: . | Syslog mapping | Global discards | Global de-duplication | Global rules, in order | Grouping, and the group rules. (group_order: if required? TODO - check) . | discard_first | dedupe | rules | discard_last | . | Discards that rely on other mappings | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules#rule-order",
    "relUrl": "/panther/rules#rule-order"
  },"80": {
    "doc": "Rules",
    "title": "Shortcut helpers",
    "content": "There are some tasks that are repeated frequently, so the most reqular have shortcuts set up to make the rules more succinct. TODO - not clear how or where to use these! . syslog_mapping . Takes the syslog levels and maps them to console severities. | This is a required field (TODO - what is?) | . deduplicate . Shortcut for matching on summary with a regex and replacing it. - [ /match/, 'replace' ] . Or supply a second regex if you want a more specific search replace . - [ /match/, /replace_match/, 'replace' ] . | A match will short-circuit dedupe execution, but continue on to any following rules. | . discard / discard_last . Shortcuts for dumping messages, either before or after normal processing. Discard on summary: . - '/trash/' . Or write a full rule . - name: 'To the bin' match: summary: /trash/ . | Discard will short-circuit execution. | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules#shortcut-helpers",
    "relUrl": "/panther/rules#shortcut-helpers"
  },"81": {
    "doc": "Rules",
    "title": "Rules",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules",
    "relUrl": "/panther/rules"
  },"82": {
    "doc": "Sending Events to Panther",
    "title": "Overview",
    "content": "The most straightforward way to send events to Panther is to install and configure compatible logging software on the client system. While users should generally install the software according to the documentation published by the relevant providers, specific configuration is also required to enable communication with Panther. This and subsequent pages provide a guide to the configuration required once any necessary logging software has been installed. NOTE: The instructions here are based on clean installations of the logging software – if site-specific configurations have already been made, then it is necessary to download the Panther resources and integrate them following the providers’ documentation. All users should read the general advice in the introduction, but then refer to the relevant sections for their own specific software. | Introduction (all systems) | Rsyslog (Linux) | NXLog (Linux | Windows) | Panther API (HTTP) | AWS | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events#overview",
    "relUrl": "/panther/sending-events#overview"
  },"83": {
    "doc": "Sending Events to Panther",
    "title": "Introduction",
    "content": "Events can be received by Panther via two protocols: . | Protocol | Destination | Port | . | Secure Syslog | example.app.panther.support | 6514 | . | HTTP (Post) | https://app.panther.support | 443 | . These are both TCP ports and may require additional firewalling rules to permit connectivity depending on your networking setup. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events#introduction",
    "relUrl": "/panther/sending-events#introduction"
  },"84": {
    "doc": "Sending Events to Panther",
    "title": "app.panther.support (secure syslog)",
    "content": "Event data is sent securely to the Panther server from local clients via an encrypted connection using Transport Layer Security (TLS). This requires the use of certificates and unique client keys which are generated specifically for your Panther instance during the sign-up process. NOTE: TLS certificates are used for app.panther.support, self hosted Docker containers use standard Syslog . Since these certificates and keys are needed to configure client event loggers, they are bundled into “configuration archives” along with sample configuration files specific to the software, and made available for download from your Panther instance e.g. (example.app.panther.support). NOTE: You should ensure that the key.pem included in your configuration archive is kept secure to prevent its use by anyone else. The configuration process therefore is to download an appropriate archive, to load it in a suitable location for the software, and to carry out any remaining package or system specific tasks. There are specific instructions for configuring the following Event senders: . | Rsyslog | NXLog | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events#apppanthersupport-secure-syslog",
    "relUrl": "/panther/sending-events#apppanthersupport-secure-syslog"
  },"85": {
    "doc": "Sending Events to Panther",
    "title": "Other Syslog agents",
    "content": "Any Sylog agent can be used so long as it supports TLS Client certificate authentication, the necessary certificate files can be acquired from the Rsyslog configuration archive. The following files included in the rsyslog-config-&lt;system&gt;.tar can be used as the basis for other Syslog agents: . | cert.pem | TLS Client certificate (self signed) | . | key.pem | TLS Client Key | . | panther-cert-chain.pem | The (self signed) Certificate chain of trust | . Syslog events are sent to app.panther.support:6514 (6514 is the secure syslog port). ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events#other-syslog-agents",
    "relUrl": "/panther/sending-events#other-syslog-agents"
  },"86": {
    "doc": "Sending Events to Panther",
    "title": "app.panther.support (HTTPS API)",
    "content": "Event data is sent securely to the Panther server from local clients via an encrypted HTTPS connection. This does not require any additional certficates to be installed and will use your systems standard TLS authority chain of trust. For futher information please consult the general API Console documentation, or the AWS-Events2Panther. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events#apppanthersupport-https-api",
    "relUrl": "/panther/sending-events#apppanthersupport-https-api"
  },"87": {
    "doc": "Sending Events to Panther",
    "title": "Self Hosted Panther",
    "content": "TODO . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events#self-hosted-panther",
    "relUrl": "/panther/sending-events#self-hosted-panther"
  },"88": {
    "doc": "Sending Events to Panther",
    "title": "Sending Events to Panther",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events",
    "relUrl": "/panther/sending-events"
  },"89": {
    "doc": "Admin",
    "title": "Introduction",
    "content": "Users who are members of the “admin” group may carry out administration tasks from the Admin page accessed from the main navigation bar at the top of the Panther screen. ",
    "url": "https://openanswers.github.io/panther-docs/panther/admin#introduction",
    "relUrl": "/panther/admin#introduction"
  },"90": {
    "doc": "Admin",
    "title": "User Administration",
    "content": "There are two groups of users supported by Panther – “Admin” and “User”. Both can be used to login to the application, view the recorded data, and carry out most associated actions, but members of the “Admin” group may additionally: . | add more users | download the syslog configuration and TLS certificates | create API Keys | . The user created during the app.panther.support signup process will automatically be an “Admin” user, who may then go on to carry out any further configuration and create any more user accounts that may be required. ",
    "url": "https://openanswers.github.io/panther-docs/panther/admin#user-administration",
    "relUrl": "/panther/admin#user-administration"
  },"91": {
    "doc": "Admin",
    "title": "Creating User Accounts",
    "content": "New users may be added by completing the user name and email address input fields in the Console Users section of the administration page. Once a group has been selected and the Add button clicked, a link will be sent to the new user via email for them to use to set their password. ",
    "url": "https://openanswers.github.io/panther-docs/panther/admin#creating-user-accounts",
    "relUrl": "/panther/admin#creating-user-accounts"
  },"92": {
    "doc": "Admin",
    "title": "Modifying User Accounts",
    "content": "A menu to edit user accounts can be displayed by clicking on an entry in the list of Console Users. Deleting Users . To delete a user, click on the user in the users list to display the account control buttons, and then click the Delete button. Changing Email Addresses . To change a user’s email address, click on the user in the users list to display the account control buttons, type the new email address into the Email input field, and then click the Save button. Resetting Passwords . To reset a user’s password, click on the user in the users list to display the account control buttons, and then click the Reset Password button to send a password reset link via email to the user’s configured address. ",
    "url": "https://openanswers.github.io/panther-docs/panther/admin#modifying-user-accounts",
    "relUrl": "/panther/admin#modifying-user-accounts"
  },"93": {
    "doc": "Admin",
    "title": "API Keys",
    "content": "Panther also offers an API to import event logs. For security, registered users must supply unique keys when using this method to transfer data to Panther. Keys are generated simply by navigating to the API Keys section and clicking the Generate button. See the API documentation for more information. ",
    "url": "https://openanswers.github.io/panther-docs/panther/admin#api-keys",
    "relUrl": "/panther/admin#api-keys"
  },"94": {
    "doc": "Admin",
    "title": "Delete All Events",
    "content": "TODO . ",
    "url": "https://openanswers.github.io/panther-docs/panther/admin#delete-all-events",
    "relUrl": "/panther/admin#delete-all-events"
  },"95": {
    "doc": "Admin",
    "title": "Console Fields",
    "content": "TODO . ",
    "url": "https://openanswers.github.io/panther-docs/panther/admin#console-fields",
    "relUrl": "/panther/admin#console-fields"
  },"96": {
    "doc": "Admin",
    "title": "Admin",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/admin",
    "relUrl": "/panther/admin"
  },"97": {
    "doc": "Dashboard",
    "title": "Overview",
    "content": "The dashboard provides an overview of the current contents of your event console. ",
    "url": "https://openanswers.github.io/panther-docs/panther/dashboard#overview",
    "relUrl": "/panther/dashboard#overview"
  },"98": {
    "doc": "Dashboard",
    "title": "Severities",
    "content": "At the top of the dashboard, there is a row of counters for events processed in the event logs associated with each severity. These counters reflect the number of unique events logged, and will not increase if the same event log is processed multiple times. ",
    "url": "https://openanswers.github.io/panther-docs/panther/dashboard#severities",
    "relUrl": "/panther/dashboard#severities"
  },"99": {
    "doc": "Dashboard",
    "title": "Event Groups",
    "content": "Counters are displayed in this section for events matching any created event groups – along with one special counter for events having no associated group and another for all events processed. The counters reflect the total numbers of unique event log entries in each of the respective groups, with the coloured bars representing the relative proportions of events having each of the severity levels. The actual numerical breakdowns can be inspected by moving the mouse pointer over each row. ",
    "url": "https://openanswers.github.io/panther-docs/panther/dashboard#event-groups",
    "relUrl": "/panther/dashboard#event-groups"
  },"100": {
    "doc": "Dashboard",
    "title": "Activity Stream",
    "content": "The activity stream logs user interaction with Panther, including: . | Event acknowledgements and unacknowledgements | Event assignments | Event severity changes | Event clearances | Event deletions | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/dashboard#activity-stream",
    "relUrl": "/panther/dashboard#activity-stream"
  },"101": {
    "doc": "Dashboard",
    "title": "Inventory",
    "content": "The inventory lists the names of hostnames that Panther has receieved events from and the last times they were seen. ",
    "url": "https://openanswers.github.io/panther-docs/panther/dashboard#inventory",
    "relUrl": "/panther/dashboard#inventory"
  },"102": {
    "doc": "Dashboard",
    "title": "Dashboard",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/dashboard",
    "relUrl": "/panther/dashboard"
  },"103": {
    "doc": "Console",
    "title": "Overview",
    "content": ". The console is the main feature of Panther. It contains the system event logs, which are filtered and categorized based on account settings. There are numerous options for interacting with the events, such as deleting them, expanding them to display more information, or assigning them to specific users. These options are explained in more detail below. ",
    "url": "https://openanswers.github.io/panther-docs/panther/console#overview",
    "relUrl": "/panther/console#overview"
  },"104": {
    "doc": "Console",
    "title": "Events",
    "content": "To interact with one or more events, first select them using one of the following methods: . | Click on a single event to highlight it. | Click hold and drag (like drawing a box) to highlight many events. | Control click to add another single event to your selection. | Shift click to add a sequence of events to your selection. | Press keyboard shortcut ctrl+a to select all events. | . Right click to display the context menu of actions available for the selected events as outlined below. Acknowledge and Unacknowledge . New events will be in an unacknowledged state by default, displayed in bold text, unless a rule has been set that says otherwise. When an event is acknowledged from the right click menu, it will automatically be assigned to the user. Users can also acknowledge and unacknowledge events from the event details dialogue box. Add External ID . TODO . Add Note . TODO . Clear . Clearing sets an event to be removed from the console. Cleared events will be highlighted green for a time, so other users can be notified, until a background task deletes them. Assign . Events can be assigned to console users, who can then see them in the view page under the Mine user view. Severity . The severity levels of events can be changed to different values by selecting new ones from the provided menu options. Details . TODO . Copy Event . The summary details of the selected events can be copied into your local system’s copy buffer for pasting into other applications. Tools . TODO . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console#events",
    "relUrl": "/panther/console#events"
  },"105": {
    "doc": "Console",
    "title": "Event Details",
    "content": "A dialogue box containing more detail of each event can be displayed by double clicking the event or pressing the enter key while an event is selected. In addition to the details available in the dialogue box, all actions in the console’s right click context menu are also available as buttons along the bottom. Along the top is a row of tabs providing access to further information, as outlined below. Details . The details tab provides an overview of the event, including a graph of up to 1000 of the event’s previous occurrences. Notes . Text notes can be added to events for further reference, which can also be seen by other users. History . Any activity that has occurred on the event can be seen in the history tab. This will include any rules that have been used during the event processing, and any actions taken by users from the console. Fields . All data associated with events may be inspected on the fields tab. Matches . The matches tab reports whether the events match any global or group rules. ",
    "url": "https://openanswers.github.io/panther-docs/panther/console#event-details",
    "relUrl": "/panther/console#event-details"
  },"106": {
    "doc": "Console",
    "title": "Activity",
    "content": "Recent user activity can be displayed by expanding the activity sidebar from the top-right corner of the console screen. ",
    "url": "https://openanswers.github.io/panther-docs/panther/console#activity",
    "relUrl": "/panther/console#activity"
  },"107": {
    "doc": "Console",
    "title": "Filters",
    "content": "The top-left corner of the console contains a row of filters which may be applied to display events matching a number of criteria. Group . Selecting a group from the drop-down menu will filter all events to just the group set up in the user’s rules. There are two special groups – All will display every event and No Group will display any events that have not been categorized. View . Views allow event fields to be queried for particular data and only matching events to be shown in the console. By default, the All, Mine, Acknowledged and Unacknowledged views are already available. Severity . Selecting a specific severity will filter the console data to only contain events matching the required value, while All will include everything. Multiple Filters . It is possible to select all the filters at the same time in order to monitor specific kinds of events. For example, it is possible to view all critical alerts that are assigned to a particular user and match the rules for a configured group. ",
    "url": "https://openanswers.github.io/panther-docs/panther/console#filters",
    "relUrl": "/panther/console#filters"
  },"108": {
    "doc": "Console",
    "title": "Console",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/console",
    "relUrl": "/panther/console"
  },"109": {
    "doc": "License",
    "title": "License",
    "content": "All copyright and other rights in this documentation and the licensed programs described in this documentation are the property of Open Answers Ltd unless otherwise stated. No part of it may be reproduced or communicated to any third party, without express written permission of Open Answers Ltd. ",
    "url": "https://openanswers.github.io/panther-docs/panther/license",
    "relUrl": "/panther/license"
  },"110": {
    "doc": "Home",
    "title": "IT Support - First Line Operations",
    "content": "definition: Event /ɪˈvɛnt/ noun a thing that happens or takes place, especially one of importance. Something has just happened: High performing IT Support teams are able to quickly respond to events by being able to answer these questions quickly: . | What does it mean? | How important is it? | Does action need to be taken? | Who is owning it? | If it happens again, do I want to know about it? | . This is achieved by having clear visibility of what needs actioning and being able to adapt to change - quickly and continuously. | ITSM Event Management | ITSM Incident Management | . ",
    "url": "https://openanswers.github.io/panther-docs/#it-support---first-line-operations",
    "relUrl": "/#it-support---first-line-operations"
  },"111": {
    "doc": "Home",
    "title": "Panther Key Features",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/#panther-key-features",
    "relUrl": "/#panther-key-features"
  },"112": {
    "doc": "Home",
    "title": "Dashboard",
    "content": ". | Summary | Inventory | Activity Stream | . | Dashboard Documentation | . ",
    "url": "https://openanswers.github.io/panther-docs/#dashboard",
    "relUrl": "/#dashboard"
  },"113": {
    "doc": "Home",
    "title": "Console",
    "content": ". | Event Management | Assign | Add Notes | Modify/Clear | Create rule from event | . | Console Documentation | . ",
    "url": "https://openanswers.github.io/panther-docs/#console",
    "relUrl": "/#console"
  },"114": {
    "doc": "Home",
    "title": "Rules",
    "content": ". | Global/Group | Enrich | De-Duplicate | Filter/Categorize | Prioritize | GUI Rule builder | . | Rules Documentation | . ",
    "url": "https://openanswers.github.io/panther-docs/#rules",
    "relUrl": "/#rules"
  },"115": {
    "doc": "Home",
    "title": "Views",
    "content": ". | Simple, configurable filters via field/value pairs | . | Views Documentation | . ",
    "url": "https://openanswers.github.io/panther-docs/#views",
    "relUrl": "/#views"
  },"116": {
    "doc": "Home",
    "title": "API Console",
    "content": ". | Create first events using API | . | API Documentation | . ",
    "url": "https://openanswers.github.io/panther-docs/#api-console",
    "relUrl": "/#api-console"
  },"117": {
    "doc": "Home",
    "title": "Admin",
    "content": ". | Users | Syslog config | Certs and Keys | API Keys | . | Admin Documentation | . ",
    "url": "https://openanswers.github.io/panther-docs/#admin",
    "relUrl": "/#admin"
  },"118": {
    "doc": "Home",
    "title": "Home",
    "content": ". Panther is an event consolidation and management application that centralizes and manages events from IT systems, networks and applications in a single console. Support and Operations teams benefit from increased efficiency and speed to problem resolution by being able to quickly and easily identify the monitoring events that are most important. Use the Panther Console and Rules to filter, acknowledge, group, enrich, de-duplicate, aggregate, categorize, assign ownership and manage events through an (ITSM) Event Management lifecycle. Events can be securely sourced and processed from any Syslog source and/or via the Panther API. Watch your Events like a Panther! . ",
    "url": "https://openanswers.github.io/panther-docs/",
    "relUrl": "/"
  },"119": {
    "doc": "NXLog",
    "title": "NXLog Configuration (Linux)",
    "content": "Install the NXLog Community Edition from the official website following the deployment guide. Once installed, the steps to integrate NXLog with Panther are: . | download the configuration archive | install configuration files | restart nxlog | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/nxlog#nxlog-configuration-linux",
    "relUrl": "/panther/sending-events/nxlog#nxlog-configuration-linux"
  },"120": {
    "doc": "NXLog",
    "title": "Download Linux Configuration Archive",
    "content": "The configuration archives are available on the Admin page. Select this using the tab from the main menu at the top of the Panther page. The drop-down selector offers archives for the supported software and operating systems. Select the appropriate option for your client and click the Download button. The archives are downloaded in an appropriate format for each system: . | Linux archives are provided in uncompressed tar format, while | Windows archives are built using zip. | . NOTE: that the same certificates and keys are provided in each archive, so for custom configurations the choice of download is unimportant. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/nxlog#download-linux-configuration-archive",
    "relUrl": "/panther/sending-events/nxlog#download-linux-configuration-archive"
  },"121": {
    "doc": "NXLog",
    "title": "Install configuration files on Linux",
    "content": "To begin with, download the configuration archive as described above. The downloaded resources in nxlog-config-linux.tar then need to be installed into the system NXLog configuration directory. The following commands will extract the archive into /etc/nxlog, which should have been created during the NXLog installation. Note that any existing nxlog.conf will be overwritten, so make a backup if one already exists. [root@localhost ~]# cd /etc/nxlog [root@localhost /etc/nxlog]# tar -xvf /path/to/nxlog-config-linux.tar . Apart from overwriting the main nxlog.conf, this will extract the required certificates and key files into a new panther sub-directory. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/nxlog#install-configuration-files-on-linux",
    "relUrl": "/panther/sending-events/nxlog#install-configuration-files-on-linux"
  },"122": {
    "doc": "NXLog",
    "title": "Restart NXLog on Linux",
    "content": "If NXLog has been installed according to the deployment guide, then it should restart automatically following a system reboot. In order to have the new configuration take immediate effect, it is also possible to restart NXLog immediately. While systemd systems such as Ubuntu and CentOS are supported, at the time of writing the service management interface for NXLog is implemented as a wrapper around the System V init scripts. This means that, on both systemd and init based systems, it is possible to restart NXLog by calling the init script directly: . [root@localhost /etc/nxlog]# /etc/init.d/nxlog restart . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/nxlog#restart-nxlog-on-linux",
    "relUrl": "/panther/sending-events/nxlog#restart-nxlog-on-linux"
  },"123": {
    "doc": "NXLog",
    "title": "NXLog Configuration (Windows)",
    "content": "Download the Windows installer for the NXLog Community Edition from the official website. Install the package by running the installer, but also see the deployment guide. Once installed, the steps to integrate NXLog with Panther are: . | download configuration archive | install configuration files | restart nxlog | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/nxlog#nxlog-configuration-windows",
    "relUrl": "/panther/sending-events/nxlog#nxlog-configuration-windows"
  },"124": {
    "doc": "NXLog",
    "title": "Download Windows Configuration Archive",
    "content": "TODO . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/nxlog#download-windows-configuration-archive",
    "relUrl": "/panther/sending-events/nxlog#download-windows-configuration-archive"
  },"125": {
    "doc": "NXLog",
    "title": "Install configuration files on Windows",
    "content": "Once the Windows configuration archive has been downloaded as described above, the contents of nxlog-config-windows.zip must be overlaid onto the base directory of the installed NXLog package. If the default install options were used, this will normally be: . C:\\Program Files (x86)\\nxlog. Opening this directory with the Windows File Explorer will show that it contains cert and conf sub-directories, among others. While the cert directory should be empty, the conf directory may contain a sample nxlog.conf, which should be renamed nxlog.dist in order to prevent any clash with the new configuration. Extract the downloaded nxlog-config-windows.zip Panther configuration archive by clicking on it and selecting the extract to option, specifying the base directory NXLog was installed into – normally C:\\Program Files\\nxlog – containing the cert and conf sub-directories. This will copy the certificates and key files into the empty cert directory, along with a new nxlog.conf into the conf directory. Note that the system may ask for confirmation when writing to the cert directory, owing to its permissions. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/nxlog#install-configuration-files-on-windows",
    "relUrl": "/panther/sending-events/nxlog#install-configuration-files-on-windows"
  },"126": {
    "doc": "NXLog",
    "title": "Restart NXLog on Windows",
    "content": "The NXLog installer should have configured the service to be started automatically on the next system boot. From the NXLog documentation, it is also possible to start the service directly from the services console, or from the command line interface by navigating to the install directory and running nxlog.exe -f. This last option may assist in initial debugging. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/nxlog#restart-nxlog-on-windows",
    "relUrl": "/panther/sending-events/nxlog#restart-nxlog-on-windows"
  },"127": {
    "doc": "NXLog",
    "title": "NXLog",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/nxlog",
    "relUrl": "/panther/sending-events/nxlog"
  },"128": {
    "doc": "Panther API",
    "title": "Overview",
    "content": "TODO - Please see the API Console documentation . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/panther-api#overview",
    "relUrl": "/panther/sending-events/panther-api#overview"
  },"129": {
    "doc": "Panther API",
    "title": "Panther API",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/panther-api",
    "relUrl": "/panther/sending-events/panther-api"
  },"130": {
    "doc": "Rsyslog",
    "title": "Rsyslog Configuration",
    "content": "For complete information on configuring rsyslog, please consult the official guides for rsyslog. Major distributions include rsyslog in their standard repositories, so please either follow your system’s guidelines to install and enable it, or visit the official website. Once rsyslog is installed, the necessary steps to integrate it with Panther are: . | download the configuration archive | install supporting gnutls packages | install configuration files | restart rsyslog | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/rsyslog#rsyslog-configuration",
    "relUrl": "/panther/sending-events/rsyslog#rsyslog-configuration"
  },"131": {
    "doc": "Rsyslog",
    "title": "Downloading Configuration Archive",
    "content": "The configuration archives are available on the Admin page. Select this using the tab from the main menu at the top of the Panther page. The drop-down selector offers archives for the supported software and operating systems. Select the appropriate option for your client and click the Download button. The archives are downloaded in an appropriate format for each system: . | Linux archives are provided in uncompressed tar format, while | Windows archives are built using zip. | . NOTE: that the same certificates and keys are provided in each archive, so for custom configurations the choice of download is unimportant. ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/rsyslog#downloading-configuration-archive",
    "relUrl": "/panther/sending-events/rsyslog#downloading-configuration-archive"
  },"132": {
    "doc": "Rsyslog",
    "title": "Install GNU-TLS support for rsyslog",
    "content": "On GNU/Linux systems, rsyslog uses the GnuTLS library to provide its TLS functionality. This is classed as an optional dependency on some distributions, and is therefore not always installed automatically by the package manager. Where this is the case, the TLS package may have to be added explicitly along with the main rsyslog package. Debian / Ubuntu . # apt-get install rsyslog-gnutls . RedHat / CentOS . # yum install rsyslog-gnutls . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/rsyslog#install-gnu-tls-support-for-rsyslog",
    "relUrl": "/panther/sending-events/rsyslog#install-gnu-tls-support-for-rsyslog"
  },"133": {
    "doc": "Rsyslog",
    "title": "Install the configuration files",
    "content": "The downloaded resources in rsyslog-config-linux.tar need to be installed into the system rsyslog configuration directory. The following commands will extract the archive into /etc/rsyslog-client.d, creating it if necessary. If the directory already exists, then make a backup of it before extracting the archive in case any previously configured files are overwritten. [root@localhost ~]# cd /etc [root@localhost /etc]# tar -xvf /path/to/rsyslog-config-linux.tar . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/rsyslog#install-the-configuration-files",
    "relUrl": "/panther/sending-events/rsyslog#install-the-configuration-files"
  },"134": {
    "doc": "Rsyslog",
    "title": "Edit the main rsyslog configuration",
    "content": "Once the new configuration files have been installed, the main system rsyslog configuration file must be updated in order to reference them. Edit /etc/rsyslog.conf and make sure that it contains a line like this to read the Panther configuration files extracted from the archive above: . $IncludeConfig /etc/rsyslog-client.d/*.conf . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/rsyslog#edit-the-main-rsyslog-configuration",
    "relUrl": "/panther/sending-events/rsyslog#edit-the-main-rsyslog-configuration"
  },"135": {
    "doc": "Rsyslog",
    "title": "Restart rsyslog",
    "content": "The new configuration should take effect automatically when the system is next rebooted, but it is also possible to restart rsyslog to have the changes take effect immediately. systemd based systems . Systems using the newer systemd service manager, such as Ubuntu 18 and CentOS 7, can restart the rsyslog service as follows: . # systemctl restart rsyslog . init.d based systems . Systems using the older System V init service management scripts can generally restart the rsyslog service as follows: . # /etc/init.d/rsyslog restart . ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/rsyslog#restart-rsyslog",
    "relUrl": "/panther/sending-events/rsyslog#restart-rsyslog"
  },"136": {
    "doc": "Rsyslog",
    "title": "Rsyslog",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/sending-events/rsyslog",
    "relUrl": "/panther/sending-events/rsyslog"
  },"137": {
    "doc": "Event schedule selection",
    "title": "Schedules",
    "content": "Schedules can be used to specify specific times of the week, enabling Rules to only match under those conditions. The Name is used to identify the schedule when editing Rules or Groups. It must be unique. Start and End specify a time range in the format of HH:MM. If the Start time is after the End time then the following conditions shall match: . | From midnight to the End time | From the Start time till midnight | . Days of the week can be chosen with the checkboxes . | Sunday | Monday | Tuesday | Wednesday | Thursday | Friday | Saturday | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/schedules#schedules",
    "relUrl": "/panther/rules/schedules#schedules"
  },"138": {
    "doc": "Event schedule selection",
    "title": "Event schedule selection",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/schedules",
    "relUrl": "/panther/rules/schedules"
  },"139": {
    "doc": "Event selection",
    "title": "Selecting Events",
    "content": "Rules need to be able to select an event to apply an action to. Multiple “select” options will combined into a logical “and” operation. Logical “or” operations can be achieved by: . | specifying an array of values for a “select” field | using a regular expression | operator | specifying an additional rule in the ruleset | . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection#selecting-events",
    "relUrl": "/panther/rules/selection#selecting-events"
  },"140": {
    "doc": "Event selection",
    "title": "match",
    "content": "Search a field for a match. When you supply some string the match becomes /some string/ with any regex literals escaped: . match: this_field: \"some string\" . You can also specify a regex directly with js-yaml type syntax . match: that_field: !!js/regexp /some \\d+ digit/ . You can achieve a logical “or” by specifying an array of objects . match: other_field: - string search - !!js/regexp /regex search/ - more . You can achieve a logical “and” by specifying a dictionary of values . match: this_field: \"some string\" other_field: \"also this string\" . You can combine the two by specifying a dictionary with an array of values: . match: this_field: - this string - or this string other_field: - also one - of these strings . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection#match",
    "relUrl": "/panther/rules/selection#match"
  },"141": {
    "doc": "Event selection",
    "title": "equals",
    "content": "Exact match of the field some_field against the value 7: . equals: some_field: 7 . You can achieve a logical “or” by specifying an array of values: . equals: other_field: - value - temp - over . You can achieve a logical “and” by specifying a dictionary of values: . equals: some_field: 7 other_field: value . You can combine the two by specifying a dictionary with an array of values: . equals: some_field: - 7 - 8 - 9 other_field: - value - temp - over . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection#equals",
    "relUrl": "/panther/rules/selection#equals"
  },"142": {
    "doc": "Event selection",
    "title": "field_exists",
    "content": "Test for the existence of a field: . field_exists: some_name_of_existing_field . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection#field_exists",
    "relUrl": "/panther/rules/selection#field_exists"
  },"143": {
    "doc": "Event selection",
    "title": "field_missing",
    "content": "Test whether a field is missing: . field_missing: some_name_of_missing_field . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection#field_missing",
    "relUrl": "/panther/rules/selection#field_missing"
  },"144": {
    "doc": "Event selection",
    "title": "starts_with",
    "content": "Field starts with the string Starting Text. Like a regular expression /^Starting Text/ . starts_with a_field_name: 'Starting Text' . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection#starts_with",
    "relUrl": "/panther/rules/selection#starts_with"
  },"145": {
    "doc": "Event selection",
    "title": "ends_with",
    "content": "Field ends with the string Ending Text. Like a regular expression /Ending Text$/ . ends_with a_field_name: 'Ending Text' . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection#ends_with",
    "relUrl": "/panther/rules/selection#ends_with"
  },"146": {
    "doc": "Event selection",
    "title": "Actions",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection#actions",
    "relUrl": "/panther/rules/selection#actions"
  },"147": {
    "doc": "Event selection",
    "title": "set",
    "content": ". | Set a field to a value: | . - name: super_set equals: node: 'super.man.com' set: group: 'Krypton' . | Set a field by using the value from another field: | . - name: prefix summary with node name set: summary: '{node} - {summary}' match: summary: /hello world/ . | Set a field using a paramaterized pattern match: | . - name: change the words around set: summary: '{match.2} {match.1} number: {match.2}' match: summary: /^(\\w+) (\\d+) (\\w+).*/ . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection#set",
    "relUrl": "/panther/rules/selection#set"
  },"148": {
    "doc": "Event selection",
    "title": "replace",
    "content": "A field holding the value to be replaced must be specified using field and the value to be replaced using this. The new value must be specified using with: . - name: other_replace match: summary: 'repeating repeating repeating' replace: field: message this: 'repeating' with: 'newrepeat' . A warning will be logged if the replacement doesn’t find a match. ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection#replace",
    "relUrl": "/panther/rules/selection#replace"
  },"149": {
    "doc": "Event selection",
    "title": "discard",
    "content": "Sets the severity of the event to -1 and stops further rule processing. The event will be discarded: . - name: other_replace match:: node: 'spurious.alerts' discard: true . TODO: is this incomplete? regex replace a value . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection#discard",
    "relUrl": "/panther/rules/selection#discard"
  },"150": {
    "doc": "Event selection",
    "title": "Event selection",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/selection",
    "relUrl": "/panther/rules/selection"
  },"151": {
    "doc": "Settings",
    "title": "Overview",
    "content": "TODO. ",
    "url": "https://openanswers.github.io/panther-docs/panther/settings#overview",
    "relUrl": "/panther/settings#overview"
  },"152": {
    "doc": "Settings",
    "title": "Settings",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/settings",
    "relUrl": "/panther/settings"
  },"153": {
    "doc": "Keyboard Shortcuts",
    "title": "Keyboard Shortcuts",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts",
    "relUrl": "/panther/console/shortcuts"
  },"154": {
    "doc": "Keyboard Shortcuts",
    "title": "Select next event",
    "content": "up/down . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#select-next-event",
    "relUrl": "/panther/console/shortcuts#select-next-event"
  },"155": {
    "doc": "Keyboard Shortcuts",
    "title": "Add event to selection",
    "content": "shift + up / shift + down . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#add-event-to-selection",
    "relUrl": "/panther/console/shortcuts#add-event-to-selection"
  },"156": {
    "doc": "Keyboard Shortcuts",
    "title": "Delete the selected events",
    "content": "backspace / delete . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#delete-the-selected-events",
    "relUrl": "/panther/console/shortcuts#delete-the-selected-events"
  },"157": {
    "doc": "Keyboard Shortcuts",
    "title": "Open the events detailed information",
    "content": "enter / return . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#open-the-events-detailed-information",
    "relUrl": "/panther/console/shortcuts#open-the-events-detailed-information"
  },"158": {
    "doc": "Keyboard Shortcuts",
    "title": "Select all events in your view",
    "content": "ctrl + a . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#select-all-events-in-your-view",
    "relUrl": "/panther/console/shortcuts#select-all-events-in-your-view"
  },"159": {
    "doc": "Keyboard Shortcuts",
    "title": "Clear selection",
    "content": "escape . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#clear-selection",
    "relUrl": "/panther/console/shortcuts#clear-selection"
  },"160": {
    "doc": "Keyboard Shortcuts",
    "title": "Copy selected rows to clipboard",
    "content": "ctrl + c . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#copy-selected-rows-to-clipboard",
    "relUrl": "/panther/console/shortcuts#copy-selected-rows-to-clipboard"
  },"161": {
    "doc": "Keyboard Shortcuts",
    "title": "Assign the selected events to a user",
    "content": "a . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#assign-the-selected-events-to-a-user",
    "relUrl": "/panther/console/shortcuts#assign-the-selected-events-to-a-user"
  },"162": {
    "doc": "Keyboard Shortcuts",
    "title": "Clear selected events",
    "content": "c . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#clear-selected-events",
    "relUrl": "/panther/console/shortcuts#clear-selected-events"
  },"163": {
    "doc": "Keyboard Shortcuts",
    "title": "Toggle the Acknowledged flag of the event",
    "content": "k . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#toggle-the-acknowledged-flag-of-the-event",
    "relUrl": "/panther/console/shortcuts#toggle-the-acknowledged-flag-of-the-event"
  },"164": {
    "doc": "Keyboard Shortcuts",
    "title": "Set the severity for selected events",
    "content": "s . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#set-the-severity-for-selected-events",
    "relUrl": "/panther/console/shortcuts#set-the-severity-for-selected-events"
  },"165": {
    "doc": "Keyboard Shortcuts",
    "title": "Show the help dialogue",
    "content": "? / h . ",
    "url": "https://openanswers.github.io/panther-docs/panther/console/shortcuts#show-the-help-dialogue",
    "relUrl": "/panther/console/shortcuts#show-the-help-dialogue"
  },"166": {
    "doc": "Rules file (YAML)",
    "title": "Rules location",
    "content": "Depending on which way you installed Panther there are differing locations of the rule files. ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/yaml#rules-location",
    "relUrl": "/panther/rules/yaml#rules-location"
  },"167": {
    "doc": "Rules file (YAML)",
    "title": "When using app.panther.support",
    "content": "The rules are not directly accessible to the end user but they can be exported, edited and re-imported from Rules tab. ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/yaml#when-using-apppanthersupport",
    "relUrl": "/panther/rules/yaml#when-using-apppanthersupport"
  },"168": {
    "doc": "Rules file (YAML)",
    "title": "When using docker-compose.yml",
    "content": "A Docker volume will have been created, the name is comprised of two parts. &lt;directory-name&gt;_rules_vol . For example if your docker-compose.yml is in a directory called panther then the Docker volume will be called panther_rules-vol . e.g. [root@localhost ~]# ls -l /var/lib/docker/volumes/panther-core_rules-vol/_data/ total 14 -rw-r--r-- 1 ansible ansible 588 Jul 7 2020 http.rules.yml -rw-r--r-- 1 ansible ansible 860 Jul 7 2020 server.rules.yml -rw-r--r-- 1 ansible ansible 2256 Jul 7 2020 syslogd.rules.yml . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/yaml#when-using-docker-composeyml",
    "relUrl": "/panther/rules/yaml#when-using-docker-composeyml"
  },"169": {
    "doc": "Rules file (YAML)",
    "title": "When running the source code",
    "content": "The rules are located under rules/ . e.g. [root@localhost panther-core]# ls -l rules/ total 23 -rw-r--r-- 1 root root 588 Feb 23 11:36 http.rules.yml -rw-r--r-- 1 root root 815 Mar 26 16:12 server.rules.yml -rw-r--r-- 1 root root 2256 Feb 23 11:36 syslogd.rules.yml . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/yaml#when-running-the-source-code",
    "relUrl": "/panther/rules/yaml#when-running-the-source-code"
  },"170": {
    "doc": "Rules file (YAML)",
    "title": "Rules format",
    "content": "The server.rules.yml has three main sections . globals: groups: schedules: . ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/yaml#rules-format",
    "relUrl": "/panther/rules/yaml#rules-format"
  },"171": {
    "doc": "Rules file (YAML)",
    "title": "Rules file (YAML)",
    "content": " ",
    "url": "https://openanswers.github.io/panther-docs/panther/rules/yaml",
    "relUrl": "/panther/rules/yaml"
  }
}
